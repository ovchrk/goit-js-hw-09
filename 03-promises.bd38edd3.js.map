{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,qBAClCC,EAAUF,SAASC,cAAc,oBACjCE,EAAYH,SAASC,cAAc,sBACvBD,SAASC,cAAc,uBAC/BG,iBAAiB,SAkC3B,SAA0BC,GACxBA,EAAIC,iBACJ,IAAK,IAAIC,EAAI,EAAGA,GAAKC,EAAQD,GAAK,EAChCE,EAAcF,EAAGG,GACdC,MAAK,EAACC,SAAEA,EAAUC,MAAAC,MACjBC,EAAAlB,GAASmB,OAAOC,QACd,uBAAqBL,QAAiBE,MAAU,IAGnDI,OAAM,EAACN,SAAEA,EAAUC,MAAAM,MAClBJ,EAAAlB,GAASmB,OAAOI,QACd,sBAAoBR,QAAeO,MAAU,IAGnDT,GAASW,C,IA/CbtB,EAASK,iBAAiB,SAQ1B,SAA2BC,GACzBK,EAAQY,OAAOjB,EAAIkB,cAAcC,M,IARnCtB,EAAQE,iBAAiB,SAWzB,SAA0BC,GACxBgB,EAAOC,OAAOjB,EAAIkB,cAAcC,M,IAXlCrB,EAAUC,iBAAiB,SAc3B,SAA4BC,GAC1BG,EAASc,OAAOjB,EAAIkB,cAAcC,M,IAbpC,IAAId,EAAQ,EACRW,EAAO,EACPb,EAAS,EAcb,MAAMC,EAAgB,CAACG,EAAUa,IACxB,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEf,EAAUC,MAAAY,IAEpBG,EAAO,C,SAAEhB,EAAUC,MAAAY,GAAQ,GAE5BA,EAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayRef = document.querySelector('input[name=delay]');\nconst stepRef = document.querySelector('input[name=step]');\nconst amountRef = document.querySelector('input[name=amount]');\nconst submitBtn = document.querySelector('button[type=submit]');\nsubmitBtn.addEventListener('click', submitBtnHandler);\ndelayRef.addEventListener('input', delayInputHandler);\nstepRef.addEventListener('input', stepInputHandler);\namountRef.addEventListener('input', amountInputHandler);\n\nlet delay = 0;\nlet step = 0;\nlet amount = 0;\n\nfunction delayInputHandler(evt) {\n  delay = Number(evt.currentTarget.value);\n}\n\nfunction stepInputHandler(evt) {\n  step = Number(evt.currentTarget.value);\n}\n\nfunction amountInputHandler(evt) {\n  amount = Number(evt.currentTarget.value);\n}\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\nfunction submitBtnHandler(evt) {\n  evt.preventDefault();\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delayRef","document","querySelector","$47d4ff9957288465$var$stepRef","$47d4ff9957288465$var$amountRef","addEventListener","evt","preventDefault","i","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","$47d4ff9957288465$var$delay","then","position","delay","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","$47d4ff9957288465$var$step","Number","currentTarget","value","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.bd38edd3.js.map"}